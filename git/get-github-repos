#!/bin/bash
# -*- coding: UTF-8 -*-

# Script for cloning and initialization of github repositories.
# Thanks Predrag Mandic for temlate

### Define text styles  ###########
TXT_C="tput setaf"    # set text color in BGR format
TXT_R="tput sgr0"     # reset text format
TXT_B="tput bold"     # set bold
TXT_U="tput sgr 0 1"  # set underlined


# Detect directory in which the script resides
BASEDIR=$(dirname "`[[ $0 == /* ]] && echo "$0" || echo "${PWD}/${0#./}"`")

UNAME=$(uname)

validate_before(){
    [ $? != "0" ] && exit 1 || true
}


SOURCE_DOMAIN=github.com
SOURCE_USER=olujicz

caption(){
	echo -e "\n`$TXT_B`Clone script`$TXT_R` for cloning git repositories located on $SOURCE_DOMAIN git server."
	echo -e "Maintainer: `$TXT_B`Zoran Olujic`$TXT_R`"
}

usage_() {
	echo "Usage: get-github-repos {REPO_NAME [BRANCH_NAME]|help}"
}

help_() {
	caption
	usage_
	echo -e "`$TXT_B`\nREPO_NAME`$TXT_R`"
	echo -e "\t\tChoose one of repository names as an argument (e.g. \"`$TXT_B`get-github-repos bash-scripts`$TXT_R`\")"
	echo -e "`$TXT_B`\nBRANCH_NAME`$TXT_R`"
	echo -e "\t\tDefine one branch only as an argument (e.g. \"`$TXT_B`get-github-repos bash-scripts master`$TXT_R`\")"
	echo ""
}




if [ -z $1 ]; then
	usage_
	exit 1
fi


case "$1" in
	help)
		help_
		;;

	*)
		cd "$BASEDIR"
			if [ -z "$2" ]; then
				git clone git@$SOURCE_DOMAIN:$SOURCE_USER/$1.git ; validate_before
			else
				git clone -b $2 git@$SOURCE_DOMAIN:$SOURCE_USER/$1.git ; validate_before
			fi
		cd -
		;;
esac
